.step(data-title='The 2FA Step', 
    data-file='app/controllers/authy_controller.rb', data-highlight='22-40')
  :markdown
    ## Sending a Token

    These two route handlers are responsible for sending the token, and then 
    validating the code that they entered.

    In the case where our User already has the Authy app, but is not enabled for 
    OneTouch this same method will trigger a push notification that will be sent 
    to their phone, with a code inside the Authy app.

    A verification form will pop up over the login form. The verification form 
    will look something like this to the end user:

    ![The Verification Form](//s3.amazonaws.com/howtodocs/2fa-screen-verify.png)

    The `verify` method is responsible for validating the token sent to our user 
    via SMS.  First, we grab the `User` model by the ID we stored in the session 
    during the previous step in `pre_2fa_auth_user_id`.  Next, we use the Authy 
    API to validate the token our user entered against the one Authy sent them.  
    If the two match, our login process is complete!  We store the user's 
    database ID in the session object as `user_id`, which we use to indicate 
    that the user has sucessfully logged in to our application.

.step
  :markdown
    ## Where to next?

    That's it! We've just implemented two-factor auth using three different 
    methods and the latest in Authy technology.

    If you're a Ruby developer working with Twilio, you might enjoy these
    other tutorials:

    [**Masked Phone Numbers**](//www.twilio.com/docs/howto/walkthrough/masked-numbers/ruby/rails)

    Protect your users' privacy by anonymously connecting them with Twilio Voice 
    and SMS. Learn how to create disposable phone numbers on-demand, so two 
    users can communicate without exchanging personal information.

    [**Call Tracking**](h//www.twilio.com/docs/howto/walkthrough/call-tracking/ruby/rails)

    Use Twilio to track the effectiveness of your marketing campaigns.

    ### Did this help?

    Thanks for checking out this tutorial! If you have any feedback to share
    with us, we'd love to hear it. Tweet
    [@twilio](http://twitter.com/twilio) to let us know what you think.